using Nethereum.ABI.FunctionEncoding.Attributes;
using Nethereum.Contracts;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using Nethereum.Web3.Accounts;
using Nethereum.Web3;



using Nethereum.Contracts.CQS;
using Nethereum.Util;
using Nethereum.Hex.HexConvertors.Extensions;

using Nethereum.Contracts.Extensions;
using System.Numerics;
using System.Security.Cryptography.X509Certificates;


using Nethereum.Hex.HexTypes;

using Microsoft.Win32;
using System.IO;
using System.Runtime.CompilerServices;
using Org.BouncyCastle.Utilities;
using Org.BouncyCastle.Asn1;

namespace BlockChain_Project
{
 
 
    public class IotCreationContract : ContractDeploymentMessage
    {


        public static string BYTECODE = "";



        public IotCreationContract() : base(BYTECODE) { }


        [Parameter("address", "_owner", 1)]
        public string _owner { get; set; }

        [Parameter("string", "_productName", 2)]
        public string _ProductName { get; set; }
        [Parameter("string", "_description", 3)]
        public string _Description { get; set; }
        [Parameter("string", "_specification", 4)]
        public string _Specification { get; set; }
        [Parameter("string", "_serialNumber", 5)]
        public string _SerialNumber { get; set; }


    }
    [Function("getOwnerAddress", "address")]
    public class OwnerAddress : FunctionMessage
    {


    }
    [Function("productNameUpdate256", "int256")]
    public class ProductUpdate : FunctionMessage
    {
        [Parameter("string", "newProductName", 1)]
        public string ProductName { get; set; }

    }
    [Function("specificationUpdate", "int256")]
    public class SpecificationUpdate : FunctionMessage
    {
        [Parameter("string", "newSpecification", 1)]
        public string Specification { get; set; }

    }
    [Function("deviceDecommissioning", "int256")]
    public class Decommission : FunctionMessage
    {

    }

    [Function("ownershipTransfer", "int256")]
    public class TransferOwnerShips : FunctionMessage
    {

        [Parameter("address", "newOwner", 1)]
        public string newOwner { get; set; }

    }
    [Function("getProductName", "string")]
    public class ProductName : FunctionMessage
    {


    }
    [Function("getDescription", "string")]
    public class Description : FunctionMessage
    {


    }
    [Function("getSerialNumber", "string")]
    public class SerialNumber : FunctionMessage
    {


    }
    public partial class Form5 : Form
    {
        public string contractaddress1;
        public Form5()
        {
            contractaddress1 = "";
            InitializeComponent();
        }

        private async Task getContract(string eth_address,string privateKey,string productName,string description,string pserialNumber,string specification)
        {
            var url = "http://127.0.0.1:7545";
            var account = new Account(privateKey);
            var web31 = new Web3(account, url);

            var iotcreation = new IotCreationContract
            {
                _owner = eth_address,
                _ProductName = productName,
                _Description = description,
                _SerialNumber = pserialNumber,
                _Specification = specification
            };
            var deploymentHandler = web31.Eth.GetContractDeploymentHandler<IotCreationContract>();
            var transactionReceipt = await deploymentHandler.SendRequestAndWaitForReceiptAsync(iotcreation);
            string contractAddress = transactionReceipt.ContractAddress;
            MessageBox.Show( "Deployed Contract:"+" "+contractAddress);
            var csv = new StringBuilder();

            //in your loop
            string Item1 = contractAddress;
            string Item2= eth_address;
            //Suggestion made by KyleMit
            var newLine = string.Format("{0},{1}", Item1, Item2);
            csv.AppendLine(newLine);

            //after your loop
            
            File.AppendAllText(@"C:\Users\C.z\source\repos\BlockChain Project\BlockChain Project\ContractOwner.txt",csv.ToString());

            MessageBox.Show("JHWGF");
        }
        private void label2_Click(object sender, EventArgs e)
        {
            
            

        }

        private void button1_Click(object sender, EventArgs e)
        {
            string productName = textBox1.Text;
            string description = textBox2.Text;
            string specification = textBox3.Text;
            string pserialNumber = textBox4.Text;
            string eth_address1 = "0x594559a12AF7CC1085f65c53f4252535Bad12203";

            var privateKey1 = "db9820f8b4585f5f022b03e062431636dc965aff525b195cee787c1fe55fd02b";
            


            getContract(eth_address1, privateKey1, productName, description, specification, pserialNumber);
            
            
            Form2 S = new Form2();
            S.Show();
        }
    }
}
